import java.util.ArrayList;
import java.util.Arrays;

class Solution {
        // 문제 32
        // 정수 배열 numbers가 주어집니다. numbers에서 서로 다른 인덱스에 있는 두 개의 수를 뽑아
        // 더해서 만들 수 있는 모든 수를 배열에 오름차순으로 담아 return 하도록 solution 함수를 완성해주세요.

        // 제한사항
        // numbers의 길이는 2 이상 100 이하입니다.
        // numbers의 모든 수는 0 이상 100 이하입니다.
        
    public int[] solution(int[] numbers) {
// nums 라는 새로운 어레이리스트를 만들어준다.
        ArrayList<Integer> nums = new ArrayList<>();

        // 카운트용 변수를 하나 만들어준다. 
        int count = 0;
        for (int i = 0; i < numbers.length; i++) {
            for (int j = 0; j < numbers.length - 1; j++) {
                // i 와 j 가 같으면 두번째 for문을 다시 시작한다.
                if (i == j)
                    continue;
                // 1 1 1 1 2 2 2 5
                // 1 1 1 1 2 2 2 5
                // 배열의 숫자가 서로 같으면 카운트를 0으로 초기화 시켜주고 for문을 종료한다.
                if (numbers[i] == numbers[j] && count == 1) {
                    count = 0;
                    break;
                }
                
                // 배열의 숫자가 같으면 카운트를 증가시켜준다.
                if (numbers[i] == numbers[j])
                    count++;
                
                // 배열의 숫자를 서로 더한 수를 담을 sum 을 만든다.
                // 배열안에 만약에 해당하는 숫자 즉 sum 이 없으면 값을 넣는다.
                int sum = numbers[i] + numbers[j];
                if (!nums.contains(sum))
                    nums.add(sum);
            }
        }

        // answer 배열의 길이를 위에서 최종적으로 받아온 nums 길이로 지정
        // 이후에 for 문을 통해 값을 넣어준다.
        // 마지막에 Arrays.sort 를 통해 오름차순 정렬을 해준다.
        int[] answer = new int[nums.size()];
        for (int i = 0; i < nums.size(); i++) {
            answer[i] = nums.get(i);
        }
        Arrays.sort(answer);

        return answer;
    }
}
