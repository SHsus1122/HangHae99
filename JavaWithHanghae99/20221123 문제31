import java.util.*;

public class Solution {
        // 문제 31
        // 배열 arr가 주어집니다. 배열 arr의 각 원소는 숫자 0부터 9까지로 이루어져 있습니다. 이때,
        // 배열 arr에서 연속적으로 나타나는 숫자는 하나만 남기고 전부 제거하려고 합니다.
        // 단, 제거된 후 남은 수들을 반환할 때는 배열 arr의 원소들의 순서를 유지해야 합니다. 예를 들면,

        // arr = [1, 1, 3, 3, 0, 1, 1] 이면 [1, 3, 0, 1] 을 return 합니다.
        // arr = [4, 4, 4, 3, 3] 이면 [4, 3] 을 return 합니다.
        // 배열 arr에서 연속적으로 나타나는 숫자는 제거하고 남은 수들을 return 하는 solution 함수를 완성해 주세요.

        // 제한사항
        // 배열 arr의 크기 : 1,000,000 이하의 자연수
        // 배열 arr의 원소의 크기 : 0보다 크거나 같고 9보다 작거나 같은 정수
    public int[] solution(int []arr) {
        ArrayList<Integer> tempList = new ArrayList<Integer>();
        // arr 배열 안의 값들을 담을 빈 ArrayList 선언
        // 제한조건이 0 부터 9 까지 숫자이기 때문에 10 부터는 조건에 안맞으니 이를 이용할
        // 새로운 변수에 10을 넣고 선언
        ArrayList<Integer> tempList = new ArrayList<Integer>();
        int preNum = 10;

        // 반복문을 통해 arr 배열의 크기만큼 돌린다. 그러면서 preNum 이 arr 의 숫자와 다르면
        // 새롭게 선언한 배열에 arr 안의 숫자를 넣어준다. 그리고나서 preNum 은 방금 넣은
        // 숫자로 변경해준다. 이를 반복하면 연속된 숫자만 제거가 가능하다.
        for (int num : arr) {
            if (preNum != num)
                tempList.add(num);
            preNum = num;
        }

        // 반환할 배열을 아까 만든 배열의 길이만큼 지정해서 만들어준다.
        // 반복문을 통해서 원하는 값만 구한 배열을 넣어준다.
        // 다만 이 때, intValue 를 사용해야 한다. 그 이유는
        // Integer 래퍼클래스에서 일반 자료형 int로 변환해 주어야 int 형 배열에 넣을 수 있다.
        int[] answer = new int[tempList.size()];
        for (int i = 0; i < answer.length; i++) {
            answer[i] = tempList.get(i).intValue();
        }
        return answer;
    }
}
